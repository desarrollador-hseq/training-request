// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  ADMIN
  COMPANY
}

model Company {
  id       String  @id @default(uuid())
  name     String?
  email    String  @unique
  password String?
  isValid  Boolean @default(false)

  role   Role              @default(COMPANY)
  groups TrainingRequest[]


  collaborators   Collaborator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TrainingRequest {
  id String @id @default(uuid())

  courseId String?
  course   Course? @relation(fields: [courseId], references: [id])

  state     RequestTrainingStatus  @default(PENDING)
  companyId String
  company   Company        @relation(fields: [companyId], references: [id])
  members   Collaborator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([companyId, courseId])
}

enum RequestTrainingStatus {
  PENDING
  ACTIVE
  EXECUTED
  PROGRAMMED
  CANCELLED
}

model Collaborator {
  id       String  @id @default(uuid())
  fullname String
  numDoc   String
  email    String?
  phone    String?

  requestTrainingId String?
  requestTraining   TrainingRequest? @relation(fields: [requestTrainingId], references: [id])

  courseLevelId String
  courseLevel   CourseLevel @relation(fields: [courseLevelId], references: [id])

  companyId String?
  company   Company?        @relation(fields: [companyId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([requestTrainingId, courseLevelId, companyId])
}

model Certificate {
  id String @id @default(uuid())

  collaboratorId String
  date           DateTime?
  fileUrl        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CourseLevel {
  id String @id @default(uuid())

  name String?

  courseId String
  course   Course @relation(fields: [courseId], references: [id])

  collaborator Collaborator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}

model Course {
  id String @id @default(uuid())

  name            String?
  courseLevels    CourseLevel[]
  trainingRequest TrainingRequest[]

  active Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
